{"version":3,"sources":["utilities/HostConfig.js","utilities/setJWToken.js","actions/userAction.js","actions/Type.js","components/Layout/Header.js","actions/projectAction.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Project/AddProject.js","utilities/DateTimeFormart.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/userReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/Landing.js","components/User/Login.js","components/User/Register.js","utilities/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["HOST_API","setJWToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","type","payload","Header","this","props","window","location","href","user","validToken","headerGuestContent","className","id","to","headerLoggedInContent","username","onClick","bind","data-toggle","data-target","Component","connect","state","createProject","project","history","a","post","push","response","data","ProjectItem","identifier","deleteProject","projectIdentifier","name","description","handleDelete","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","get","res","AddProject","start_date","end_date","errors","onChange","onSubmit","e","setState","target","value","preventDefault","moment","format","newProject","nextProps","classnames","placeholder","initalState","initialState","project_task","project_tasks","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlogId","projectTaskId","deleteProjectTask","priorityString","priorityClass","info","priority","summary","acceptanceCriteria","handleDeleteClick","confirm","Backlog","projectTasksComponent","list","todoItems","doneItems","progessItems","forEach","component","status","ProjectBoard","getBacklog","projectBoardContent","length","role","button","backlog_id","UpdateProjectTask","dueDate","pt_id","getProjectTask","projectTask","updatedProjectTask","Number","console","log","updateProjectTask","projectTask_id","patch","AddProjectTask","newProjectTask","addProjectTask","Landing","landingGuestContent","ladingLoggedInContent","fullname","Login","password","loginRequest","login","class","setItem","jwt_decode","Register","confirmPassword","newUser","createNewUser","required","otherProps","render","jwtoken","getItem","decoded","exp","Date","now","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c93f6287.chunk.js","sourcesContent":["export const HOST_API = \"https://ppmt-udemy-course.herokuapp.com\"","import axios from \"axios\";\r\n\r\nconst setJWToken = (token) => {\r\n    if (token) axios.defaults.headers.common[\"Authorization\"] = token;\r\n    else delete axios.defaults.headers.common[\"Authorization\"];\r\n}\r\n\r\nexport default setJWToken;","import axios from \"axios\";\r\nimport { HOST_API } from \"../utilities/HostConfig\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./Type\";\r\nimport setJWToken from \"../utilities/setJWToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(HOST_API + \"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (e) {\r\n      dispatch({\r\n          type: GET_ERRORS,\r\n          payload: e.response.data\r\n      })\r\n  }\r\n};\r\n\r\nexport const login = (loginRequest) => async dispatch => {\r\n  try {\r\n    const res = await axios.post(`${HOST_API}/api/users/login`, loginRequest);\r\n    const {token} = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: jwt_decode(token)\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWToken(null);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  })\r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/userAction\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href=\"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.user;\r\n\r\n    const headerGuestContent = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const headerLoggedInContent = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              {user.username}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {validToken&&user ? headerLoggedInContent : headerGuestContent}\r\n          \r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./Type\";\r\nimport { HOST_API } from \"../utilities/HostConfig\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(HOST_API + \"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    //wipe all errors\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(HOST_API + \"/api/project/all\");\r\n    dispatch({\r\n      type: GET_PROJECTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getProject = (identifier, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      HOST_API + \"/api/project/\" + identifier\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (identifier, history) => async (dispatch) => {\r\n  await axios.delete(HOST_API + `/api/project/${identifier}`);\r\n  dispatch({\r\n    type : DELETE_PROJECT,\r\n    payload: identifier\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { deleteProject } from \"../../actions/projectAction\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  handleDelete(identifier) {\r\n    this.props.deleteProject(identifier);\r\n  }\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.name}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={\"/projectBoard/\" + project.projectIdentifier}>\r\n                  <li className=\"list-group-item board\">\r\n                    Project Board\r\n                  </li>\r\n                </Link>\r\n                <Link to={\"/updateProject/\"+project.projectIdentifier}>\r\n                  <li className=\"list-group-item update\">\r\n                     Update Project Info\r\n                  </li>\r\n                </Link>\r\n                  <li className=\"list-group-item delete\" onClick={this.handleDelete.bind(this, project.projectIdentifier)}>\r\n                    Delete Project\r\n                  </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {deleteProject})(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    // <a className=\"btn btn-lg btn-info\" href=\"/add\">Create a Project</a>\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.projects;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  projects: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projects: state.projects,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport { createProject } from \"../../actions/projectAction\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport {DATE_FORMART_INPUT, DATE_FORMART_SQL} from \"../../utilities/DateTimeFormart\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    var { start_date, end_date } = this.state;\r\n    if (start_date) start_date = moment(start_date, DATE_FORMART_INPUT).format(DATE_FORMART_SQL);\r\n    if (end_date) end_date = moment(end_date, DATE_FORMART_INPUT).format(DATE_FORMART_SQL);\r\n    const newProject = {\r\n      name: this.state.name,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \",{\r\n                        \"is-invalid\" : errors.name\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.name &&\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \",{\r\n                        \"is-invalid\" : errors.projectIdentifier\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier &&\r\n                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg \",{\r\n                        \"is-invalid\" : errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description &&\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","export const DATE_FORMART_SQL = \"DD/MM/YYYY\";\r\nexport const DATE_FORMART_INPUT = \"YYYY-MM-DD\";","import {GET_ERRORS} from '../actions/Type';\r\n\r\nconst initalState = {};\r\n\r\nexport default function(state=initalState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/Type\";\r\n\r\nconst initalState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return { ...state, projects: action.payload };\r\n    case GET_PROJECT:\r\n      return { ...state, project: action.payload };\r\n    case DELETE_PROJECT:\r\n      return { \r\n        ...state, \r\n        projects: state.projects.filter(e => e.projectIdentifier !== action.payload)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/Type\";\r\n\r\nconst initialState = {\r\n  project_task: {},\r\n  project_tasks: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return { ...state, project_tasks: action.payload };\r\n    case GET_PROJECT_TASK:\r\n      return { ...state, project_task: action.payload };\r\n    case DELETE_PROJECT_TASK:\r\n      return { ...state,  project_tasks : state.project_tasks.filter(e => e.projectSequence!==action.payload)};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/Type\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: action.payload ? true : false,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import errorReducer from './errorReducer';\r\nimport { combineReducers } from \"redux\";\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport userReducer from './userReducer';\r\n\r\n\r\nexport default combineReducers ({\r\n    errors : errorReducer,\r\n    projects : projectReducer,\r\n    backlog : backlogReducer,\r\n    user : userReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nvar store = createStore(\r\n  rootReducer,\r\n  initalState,\r\n  compose(applyMiddleware(...middleware)\r\n  // , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectAction\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  DATE_FORMART_SQL,\r\n  DATE_FORMART_INPUT,\r\n} from \"../../utilities/DateTimeFormart\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    var {\r\n      id,\r\n      name,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    //handle fck date\r\n    if (start_date)\r\n      start_date = moment(start_date, DATE_FORMART_SQL).format(\r\n        DATE_FORMART_INPUT\r\n      );\r\n    if (end_date)\r\n      end_date = moment(end_date, DATE_FORMART_SQL).format(DATE_FORMART_INPUT);\r\n\r\n    this.setState({\r\n      id,\r\n      name,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    var start_date = this.state.start_date;\r\n    var end_date = this.state.end_date;\r\n    if (start_date)\r\n      start_date = moment(start_date, DATE_FORMART_INPUT).format(\r\n        DATE_FORMART_SQL\r\n      );\r\n    else if (start_date == null) start_date = \"\";\r\n    if (end_date)\r\n      end_date = moment(end_date, DATE_FORMART_INPUT).format(DATE_FORMART_SQL);\r\n    else if (end_date == null) end_date = \"\";\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: start_date,\r\n      end_date: end_date,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.props;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Edit Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.name,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.name}\r\n                    name=\"name\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.name && (\r\n                    <div className=\"invalid-feedback\">{errors.name}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    value={this.state.projectIdentifier}\r\n                    name=\"projectIdentifier\"\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                    name=\"description\"\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    name=\"end_date\"\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.projects.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\r\n\r\nclass ProjectTask extends Component {\r\n  handleDeleteClick(backlogId, projectTaskId) {\r\n    this.props.deleteProjectTask(backlogId, projectTaskId);\r\n  }\r\n\r\n  render() {\r\n    const { info } = this.props;\r\n    var priorityString, priorityClass;\r\n\r\n    switch (info.priority) {\r\n      case 1:\r\n        priorityClass = \"bg-danger text-light\";\r\n        priorityString = \"HIGH\";\r\n        break;\r\n      case 2:\r\n        priorityClass = \"bg-warning text-light\";\r\n        priorityString = \"MEDIUM\";\r\n        break;\r\n      case 3:\r\n        priorityClass = \"bg-info text-light\";\r\n        priorityString = \"LOW\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={\"card-header text-primary \" + priorityClass}>\r\n          ID: {info.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{info.summary}</h5>\r\n          <p className=\"card-text text-truncate \">{info.acceptanceCriteria}</p>\r\n          <Link to={`/updateProjectTask/${info.projectIdentifier}/${info.projectSequence}`} className=\"btn btn-primary\">\r\n            View / Update\r\n          </Link>\r\n\r\n          <button className=\"btn btn-danger ml-4\" onClick={this.handleDeleteClick.bind(this, info.projectIdentifier, info.projectSequence)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect (null, {deleteProjectTask}) (ProjectTask);\r\n","import axios from \"axios\";\r\nimport { HOST_API } from \"../utilities/HostConfig\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/Type\";\r\n\r\nexport const addProjectTask = (backlog_id, projectTask, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    await axios.post(HOST_API + \"/api/backlog/\" + backlog_id, projectTask);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = (backlog_id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(HOST_API + `/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, projectTask_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(\r\n      `${HOST_API}/api/backlog/${backlog_id}/${projectTask_id}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  updatedProjectTask,\r\n  backlogId,\r\n  projectTaskId,\r\n  history\r\n) => async (dispatch) => {\r\n  try {\r\n    await axios.patch(`${HOST_API}/api/backlog/${backlogId}/${projectTaskId}`, updatedProjectTask);\r\n    history.push(`/projectBoard/${backlogId}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlogId, projectTaskId) => async dispatch => {\r\n  if(window.confirm(`Are you sure want to delete project task ${projectTaskId}?`)) {\r\n    await axios.delete(`${HOST_API}/api/backlog/${backlogId}/${projectTaskId}`);\r\n    dispatch({\r\n      type : DELETE_PROJECT_TASK,\r\n      payload : projectTaskId\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTask/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const {list} = this.props;\r\n        const projectTasksComponent = list.map(e => (<ProjectTask key={e.id} info={e} />));\r\n        var todoItems = [], doneItems = [], progessItems = [];\r\n        projectTasksComponent.forEach(component => {\r\n            switch(component.props.info.status) {\r\n                case \"TO_DO\":\r\n                    todoItems.push(component);\r\n                    break;\r\n                case \"DONE\":\r\n                    doneItems.push(component);\r\n                    break;\r\n                case \"IN_PROGRESS\":\r\n                    progessItems.push(component);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {progessItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogAction\";\r\n\r\nclass ProjectBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors)\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    var projectBoardContent = <Backlog list={project_tasks} />;\r\n    if (project_tasks.length < 1) {\r\n      if (errors.projectIdentifier)\r\n        projectBoardContent = (\r\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n            {errors.projectIdentifier}\r\n          </div>\r\n        );\r\n      else\r\n        projectBoardContent = (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No project task on this board\r\n          </div>\r\n        );\r\n    }\r\n\r\n    var button = (\r\n      <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n        Create Project Task\r\n      </Link>\r\n    );\r\n    if (errors.projectIdentifier)\r\n      button = (\r\n        <Link to={`/dashboard`} className=\"btn btn-light mb-3\">\r\n          Go back to dashboard\r\n        </Link>\r\n      );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {button}\r\n        <br />\r\n        <hr />\r\n        {projectBoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  DATE_FORMART_SQL,\r\n  DATE_FORMART_INPUT,\r\n} from \"../../../utilities/DateTimeFormart\";\r\nimport moment from \"moment\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      acceptanceCriteria: \"\",\r\n      dueDate: \"\",\r\n      priority: \"\",\r\n      projectIdentifier: \"\",\r\n      projectSequence: \"\",\r\n      status: \"\",\r\n      summary: \"\",\r\n      errors : {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\r\n    var {\r\n      id,\r\n      acceptanceCriteria,\r\n      dueDate,\r\n      priority,\r\n      projectIdentifier,\r\n      projectSequence,\r\n      status,\r\n      summary,\r\n    } = nextProps.projectTask;\r\n    if (dueDate)\r\n      dueDate = moment(dueDate, DATE_FORMART_SQL).format(DATE_FORMART_INPUT);\r\n    else if (dueDate == null) dueDate = \"\";\r\n    this.setState({\r\n      id,\r\n      acceptanceCriteria,\r\n      dueDate,\r\n      priority,\r\n      projectIdentifier,\r\n      projectSequence,\r\n      status,\r\n      summary,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    var { dueDate } = this.state;\r\n    if (dueDate)\r\n      dueDate = moment(dueDate, DATE_FORMART_INPUT).format(DATE_FORMART_SQL);\r\n\r\n    var updatedProjectTask = {\r\n      id: Number(this.state.id),\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      dueDate: dueDate,\r\n      priority: Number(this.state.priority),\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectSequence: this.state.projectSequence,\r\n      status: this.state.status,\r\n      summary: this.state.summary,\r\n    };\r\n    console.log(updatedProjectTask);\r\n    this.props.updateProjectTask(updatedProjectTask, this.state.projectIdentifier, this.state.projectSequence, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { backlog_id } = this.props.match.params;\r\n    const { errors } = this.props;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${backlog_id}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Task: {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \",{\r\n                      \"is-invalid\" : errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary &&\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  projectTask: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  projectTask: state.backlog.project_task,\r\n  errors : state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\nimport {\r\n  DATE_FORMART_INPUT,\r\n  DATE_FORMART_SQL,\r\n} from \"../../../utilities/DateTimeFormart\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors)\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    var { dueDate } = this.state;\r\n    if (dueDate)\r\n      dueDate = moment(dueDate, DATE_FORMART_INPUT).format(DATE_FORMART_SQL);\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: Number(this.state.priority),\r\n      dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">to project: {id}</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    onChange={this.onChange}\r\n                    value={this.state.acceptanceCriteria}\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.dueDate}\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    onChange={this.onChange}\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    onChange={this.onChange}\r\n                    value={this.state.status}\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateTopProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateTopProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    const { validToken, user } = this.props.user;\r\n    const landingGuestContent = (\r\n      <React.Fragment>\r\n        <p className=\"lead\">\r\n          Create your account to join active projects or start you own\r\n        </p>\r\n        <hr />\r\n        <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n          Sign Up\r\n        </Link>\r\n        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n          Login\r\n        </Link>\r\n      </React.Fragment>\r\n    );\r\n    const ladingLoggedInContent = (\r\n      <React.Fragment>\r\n      <p className=\"lead\">\r\n          Hi, {user.fullname} ({user.username}) ! \r\n        </p>\r\n        <hr />\r\n        <Link to=\"/dashboard\" className=\"btn btn-lg btn-primary mr-2\">\r\n          Go to Dashboard\r\n        </Link>\r\n      </React.Fragment>\r\n    )\r\n\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                {validToken ? ladingLoggedInContent : landingGuestContent}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapSateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/userAction\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      errors: {},\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const loginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(loginRequest);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user.validToken) this.props.history.push(\"/dashboard\")\r\n    if (nextProps.errors) this.setState({ errors: nextProps.errors });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user.validToken)\r\n      this.props.history.push(\"/dashboard\");\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div class=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div class=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  user : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  errors: state.errors,\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapSateToProps, { login })(Login);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/userAction\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.user.validToken)\r\n      this.props.history.push(\"/dashboard\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors)\r\n      this.setState({\r\n        errors: nextProps.errors,\r\n      });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname,\r\n                    })}\r\n                    placeholder=\"Name\"\r\n                    name=\"fullname\"\r\n                    required\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname &&\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Username\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username &&\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password &&\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword &&\r\n                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createNewUser: PropTypes.func.isRequired,\r\n  user : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  user : state.user\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, user, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      user.validToken ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user : state.user\r\n})\r\n\r\nexport default connect (mapStateToProps) (SecuredRoute);","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/Layout/Header\";\nimport Dashboard from \"./components/Dashboard\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\nimport Landing from \"./components/Landing\";\nimport Login from \"./components/User/Login\";\nimport Register from \"./components/User/Register\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWToken from \"./utilities/setJWToken\";\nimport { SET_CURRENT_USER } from \"./actions/Type\";\nimport { logout } from \"./actions/userAction\";\nimport SecuredRoute from \"./utilities/SecuredRoute\";\n\nconst jwtoken = localStorage.getItem(\"jwtToken\");\nif (jwtoken) {\n  setJWToken(jwtoken);\n  const decoded = jwt_decode(jwtoken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  });\n  if (decoded.exp < Date.now()/1000) {\n    store.dispatch(logout());\n    window.location.href=\"/\";\n  }\n\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/register\" component={Register} />\n\n          <Switch>\n          <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n          <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n          <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n          <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n          <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n          <SecuredRoute\n            exact\n            path=\"/updateProjectTask/:backlog_id/:pt_id\"\n            component={UpdateProjectTask}\n          />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}